<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="OfflineSetup.Properties" GeneratedClassName="Settings">
  <Profiles />
  <Settings>
    <Setting Name="TrackingTable" Type="System.String" Scope="Application">
      <Value Profile="(Default)">IF (EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '{0}' AND  TABLE_NAME = 'Offline_{1}'))
BEGIN
    DROP TABLE [{0}].[Offline_{1}]
END
GO

CREATE TABLE [{0}].[Offline_{1}](
	[Offline_PK_Id] [int] NOT NULL,
	[Online_PK_Id]  [int] NOT NULL,
	[Operation]     [char](1) NOT NULL,
	[SyncStatus]    [char](1) NOT NULL,
 CONSTRAINT [PK_Offline_{1}] PRIMARY KEY CLUSTERED 
(
	[Offline_PK_Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO</Value>
    </Setting>
    <Setting Name="InsertTrigger" Type="System.String" Scope="Application">
      <Value Profile="(Default)">IF EXISTS (SELECT 1 FROM SYS.TRIGGERS WHERE NAME = '{1}_Insert_Trigger')
BEGIN
    DROP TRIGGER [{0}].[{1}_Insert_Trigger]
END
GO

CREATE TRIGGER [{0}].[{1}_Insert_Trigger] 
ON [{0}].[{1}] 
FOR INSERT 
AS
BEGIN
    INSERT INTO [{0}].[Offline_{1}] (Offline_Pk_Id, Online_Pk_Id, Operation, SyncStatus)
    SELECT {2}, {2}, 'I', 'N' FROM INSERTED
END
GO</Value>
    </Setting>
    <Setting Name="UpdateTrigger" Type="System.String" Scope="Application">
      <Value Profile="(Default)">IF EXISTS (SELECT 1 FROM SYS.TRIGGERS WHERE NAME = '{1}_Update_Trigger')
BEGIN
    DROP TRIGGER [{0}].[{1}_Update_Trigger]
END
GO

CREATE TRIGGER [{0}].[{1}_Update_Trigger] 
ON [{0}].[{1}] 
FOR UPDATE 
AS
BEGIN
    DECLARE @PK_ID INT
    SELECT @PK_ID = {2} FROM INSERTED
    IF NOT EXISTS (SELECT 1 FROM [{0}].[Offline_{1}] WHERE [Offline_Pk_Id] = @PK_ID)
	BEGIN
        INSERT INTO [{0}].[Offline_{1}] (Offline_Pk_Id, Online_Pk_Id, Operation, SyncStatus)
        SELECT {2}, {2}, 'U', 'N' FROM INSERTED
	END
    ELSE IF EXISTS (SELECT 1 FROM [{0}].[Offline_{1}] WHERE [Offline_Pk_Id] = @PK_ID AND [SyncStatus] = 'Y')
    BEGIN
        UPDATE [{0}].[Offline_{1}]
        SET    [Operation] = 'U'
        ,      [SyncStatus] = 'N'
        WHERE  [Offline_Pk_Id] = @PK_ID
    END
END
GO
</Value>
    </Setting>
    <Setting Name="DeleteTrigger" Type="System.String" Scope="Application">
      <Value Profile="(Default)">IF EXISTS (SELECT 1 FROM SYS.TRIGGERS WHERE NAME = '{1}_Delete_Trigger')
BEGIN
    DROP TRIGGER [{0}].[{1}_Delete_Trigger]
END
GO

CREATE TRIGGER [{0}].[{1}_Delete_Trigger] 
ON [{0}].[{1}] 
FOR DELETE 
AS
BEGIN
	DECLARE @PK_ID INT
	SELECT @PK_ID = {2} FROM DELETED
    IF NOT EXISTS (SELECT 1 FROM [{0}].[Offline_{1}] WHERE [Offline_Pk_Id] = @PK_ID)
	BEGIN
        INSERT INTO [{0}].[Offline_{1}] (Offline_Pk_Id, Online_Pk_Id, Operation, SyncStatus)
        SELECT {2}, {2}, 'D', 'N' FROM DELETED
	END
	ELSE
	BEGIN
	    IF EXISTS (SELECT 1 FROM [{0}].[Offline_{1}] WHERE [Offline_Pk_Id] = @PK_ID AND [Operation] = 'I' AND [SyncStatus] = 'N')
		BEGIN
		   DELETE FROM [{0}].[Offline_{1}] WHERE Offline_Pk_Id = @PK_ID
		END
		ELSE
		BEGIN
		   UPDATE {0}.Offline_{1}
		   SET    [Operation] = 'D'
           ,      [SyncStatus] = 'N'
		   WHERE  Offline_Pk_Id = @PK_ID
		END
	END
END
GO
</Value>
    </Setting>
    <Setting Name="GetChangesStoredProcedure" Type="System.String" Scope="Application">
      <Value Profile="(Default)">IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'Offline_{1}_GetChanges')
BEGIN
    DROP PROCEDURE [{0}].[Offline_{1}_GetChanges]
END
GO

CREATE PROCEDURE [{0}].[Offline_{1}_GetChanges]
	@Operation Char(1)
AS
BEGIN
	IF (@Operation = 'D')
	BEGIN
	    SELECT     [OnlinePrimaryKey]   = [tracking].[Online_PK_Id]
        ,          [OfflinePrimaryKey]  = [tracking].[Offline_PK_Id]
        FROM       {0}.Offline_{1} [tracking]
        WHERE      [tracking].[Operation] = @Operation
        AND        [tracking].[SyncStatus] = 'N' 
	END
	ELSE
	BEGIN
	    SELECT     [OnlinePrimaryKey]   = [tracking].[Online_PK_Id]
        ,          [OfflinePrimaryKey]  = [tracking].[Offline_PK_Id]
{3}{4}        FROM       {0}.{1} [base]
        INNER JOIN {0}.Offline_{1} [tracking] ON [base].{2} = [tracking].Offline_Pk_Id
{5}        WHERE      [tracking].[Operation] = @Operation
        AND        [tracking].[SyncStatus] = 'N'
    END 
END
GO</Value>
    </Setting>
    <Setting Name="ColumnSQL" Type="System.String" Scope="Application">
      <Value Profile="(Default)">        ,          [{0}] = [base].[{0}]</Value>
    </Setting>
    <Setting Name="ForeignKeyColumnSQL" Type="System.String" Scope="Application">
      <Value Profile="(Default)">        ,          [{0}]   = ISNULL([{1}].Online_Pk_Id, [base].{0})</Value>
    </Setting>
    <Setting Name="ForeignKeyTableSQL" Type="System.String" Scope="Application">
      <Value Profile="(Default)">        LEFT  JOIN {0}.Offline_{1} [{2}]         ON [base].{3} = [{2}].Offline_Pk_Id</Value>
    </Setting>
  </Settings>
</SettingsFile>