<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="History_Release_Close" xml:space="preserve">
    <value>Release closed.</value>
  </data>
  <data name="History_Release_Created" xml:space="preserve">
    <value>Release created.</value>
  </data>
  <data name="History_Release_Freeze" xml:space="preserve">
    <value>Release frozen.</value>
  </data>
  <data name="History_Release_Updated" xml:space="preserve">
    <value>Release updated. Changes:&lt;br /&gt;{0}</value>
  </data>
  <data name="WorkItem_Import_Acronym_Too_Long" xml:space="preserve">
    <value>{0}, Uid {1}: Acronym {2} is more than 50 characters. It has been truncated.</value>
  </data>
  <data name="WorkItem_Import_Bad_Format" xml:space="preserve">
    <value>Workplan is not correctly formatted: {0}</value>
  </data>
  <data name="WorkItem_Import_Bad_Zip_File" xml:space="preserve">
    <value>Incorrect zip file. Zip should contain only one csv file.</value>
  </data>
  <data name="WorkItem_Import_DuplicateAcronymSameLevel" xml:space="preserve">
    <value>{0}, Uid {1}: Acronym "{2}" is duplicated on other work items with same level ({3}). Cannot proceed.</value>
  </data>
  <data name="WorkItem_Import_DuplicateAcronymSubLevel" xml:space="preserve">
    <value>{0}, Uid {1}: Acronym "{2}" is defined in the parent WI. Discarding this acronym.</value>
  </data>
  <data name="WorkItem_Import_DuplicateUID" xml:space="preserve">
    <value>UID {0} is defined for both WpId {1} and WpId {2}.</value>
  </data>
  <data name="WorkItem_Import_DuplicateWorkplanId" xml:space="preserve">
    <value>Workplan id {0} already exist. There might be conflicts when displaying.</value>
  </data>
  <data name="WorkItem_Import_FileNotFound" xml:space="preserve">
    <value>Imported file was not found at {0}. Please check the module configuration, and contact the helpdesk if necessary.</value>
  </data>
  <data name="WorkItem_Import_Incorrect_Completion" xml:space="preserve">
    <value>{0}, Uid {1}: Completion is incorrect: {2}</value>
  </data>
  <data name="WorkItem_Import_Incorrect_CreationDate" xml:space="preserve">
    <value>{0}, Uid {1}: Creation date is incorrect: {2}. Awaited format: DD/MM/YYYY</value>
  </data>
  <data name="WorkItem_Import_Incorrect_EndDate" xml:space="preserve">
    <value>{0}, Uid {1}: End date is incorrect: {2}	WorkItem_Import_Incorrect_CreationDate	{0}, Uid {1}: Creation date is incorrect: {2}. Awaited format: DD/MM/YYYY</value>
  </data>
  <data name="WorkItem_Import_Incorrect_LastModifiedDate" xml:space="preserve">
    <value>{0}, Uid {1}: Last modified date is incorrect: {2}	WorkItem_Import_Incorrect_CreationDate	{0}, Uid {1}: Creation date is incorrect: {2}. Awaited format: DD/MM/YYYY</value>
  </data>
  <data name="WorkItem_Import_Incorrect_StartDate" xml:space="preserve">
    <value>{0}, Uid {1}: Start date is incorrect: {2}	WorkItem_Import_Incorrect_CreationDate	{0}, Uid {1}: Creation date is incorrect: {2}. Awaited format: DD/MM/YYYY</value>
  </data>
  <data name="WorkItem_Import_Invalid_File_Format" xml:space="preserve">
    <value>File format is invalid: file does not have CSV extension.</value>
  </data>
  <data name="WorkItem_Import_Invalid_Hierarchy" xml:space="preserve">
    <value>{0}, Uid {1}: Workitem has level {2}, whereas parent has level {3}. Cannot process.</value>
  </data>
  <data name="WorkItem_Import_Invalid_Level" xml:space="preserve">
    <value>{0}, Uid {1}: Level has not been recognized: {2}. Defaulted to 0.</value>
  </data>
  <data name="WorkItem_Import_Invalid_PcgApprovedMtg" xml:space="preserve">
    <value>{0}, Uid {1}: Could not retrieve PCG approval meeting {2} in database</value>
  </data>
  <data name="WorkItem_Import_Invalid_PcgStoppedMtg" xml:space="preserve">
    <value>{0}, Uid {1}: Could not retrieve PCG stopped meeting {2} in database</value>
  </data>
  <data name="WorkItem_Import_Invalid_Rapporteur" xml:space="preserve">
    <value>{0}, Uid {1}: Rapporteur email "{2}" could not match an existing user in database.</value>
  </data>
  <data name="WorkItem_Import_Invalid_Release" xml:space="preserve">
    <value>{0}, Uid {1}: Cannot identify release: {2}</value>
  </data>
  <data name="WorkItem_Import_Invalid_Resource" xml:space="preserve">
    <value>{0}, Uid {1}: Resource format has not been recognized: {2}</value>
  </data>
  <data name="WorkItem_Import_Invalid_StatusReport" xml:space="preserve">
    <value>{0}, Uid {1}: Status report format has not been recognized: {2}</value>
  </data>
  <data name="WorkItem_Import_Invalid_TsgApprovedMtg" xml:space="preserve">
    <value>{0}, Uid {1}: Could not retrieve TSG approval meeting {2} in database</value>
  </data>
  <data name="WorkItem_Import_Invalid_TsgStoppedMtg" xml:space="preserve">
    <value>{0}, Uid {1}: Could not retrieve TSG stopped meeting {2} in database</value>
  </data>
  <data name="WorkItem_Import_Invalid_WiD" xml:space="preserve">
    <value>{0}, Uid {1}: WID format has not been recognized: {2}</value>
  </data>
  <data name="WorkItem_Import_TsTr_Too_Long" xml:space="preserve">
    <value>{0}, Uid {1}: "TSs and TRs" field is more than 50 characters. It has been truncated.</value>
  </data>
  <data name="WorkItem_Import_Unknown_Exception" xml:space="preserve">
    <value>An unknown exception has occured. It has been logged by our error system. Please contact helpdesk for investigation. Uid of last successfully treated WI: {0}</value>
  </data>
  <data name="WorkItem_Import_Wrong_Order" xml:space="preserve">
    <value>WorkplanId {0} comes after WorkplanId {1}. Possible messing in the Work items.</value>
  </data>
</root>